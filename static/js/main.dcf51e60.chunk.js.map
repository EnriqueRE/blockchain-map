{"version":3,"sources":["Map/map.png","TimeHeader/TimeHeader.jsx","Map/Map.jsx","Timeline/Timeline.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TimeHeader","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","getDate","Date","toLocaleDateString","weekday","year","month","day","Component","Map","height","width","src","mapIcon","alt","Timeline","index_es","icon","faTruck","faExclamationTriangle","faFileAlt","hour","minute","App","TimeHeader_TimeHeader_TimeHeader","Timeline_Timeline_Timeline","Map_Map","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sRCG3BC,eAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACbH,EAAAC,EAAAC,cAAA,2BAAmBX,KAAKa,cAJhC,CAAAN,IAAA,UAAAC,MAAA,WAYI,OADY,IAAIM,MACHC,mBAAmB,QAFlB,CAAEC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,gBAV1EvB,EAAA,CAAgCwB,+BCAnBC,EAAb,SAAAxB,GAAA,SAAAwB,IAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,GAAAvB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAuB,EAAAxB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAuB,EAAA,EAAAd,IAAA,SAAAC,MAAA,WAGI,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKW,OAAO,OAAOC,MAAM,OAAOC,IAAKC,IAASC,IAAI,aAL1DL,EAAA,CAAyBD,mCCKZO,EAAb,SAAA9B,GAAA,SAAA8B,IAAA,OAAA7B,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,GAAA7B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA6B,EAAA9B,GAAAC,OAAAQ,EAAA,EAAAR,CAAA6B,EAAA,EAAApB,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,sBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBZ,KAAKa,WACnCJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,gDAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,mBAGJH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,sBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBZ,KAAKa,WACnCJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,6BACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,uBACSF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAiBC,KAAMC,OAEhCrB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAiBC,KAAME,MADzB,2BAOVtB,EAAAC,EAAAC,cAAA,UACMF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,qBAAiDH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAiBC,KAAMG,IAAWpB,UAAU,iBAC7FH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBZ,KAAKa,WACnCJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,gDAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,mBAGRH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,sBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBZ,KAAKa,WACnCJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,gDAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,sBAhDZ,CAAAL,IAAA,UAAAC,MAAA,WAgEI,OADY,IAAIM,MACHC,mBAAmB,QATlB,CACZC,QAAS,QACTC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLc,KAAM,UACNC,OAAQ,gBA7DdP,EAAA,CAA8BP,aCwBfe,mLAvBX,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACyB,EAAD,OACK,KACF,IACP3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,KAA6B,IAC7BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACZ,IACDH,EAAAC,EAAAC,cAAC0B,EAAD,MAAa,KACR,IACP5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACZ,IACDH,EAAAC,EAAAC,cAAC2B,EAAD,MAAQ,KACH,KACF,YAnBGlB,aCKEmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAQpC,EAAAC,EAAAC,cAAEmC,EAAF,MAAYC,SAASC,eAAe,SD0H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dcf51e60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.f47ebe78.png\";","import React, { Component } from 'react';\r\nimport './TimeHeader.css';\r\n\r\nexport class TimeHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-8 offset-md-4 time-header\">\r\n        <strong>Today is: {this.getDate()}</strong>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getDate() {\r\n    var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    let today = new Date();\r\n    return today.toLocaleDateString(\"en-US\", options);\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport mapIcon from './map.png';\r\n\r\nexport class Map extends Component {\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"col\">\r\n        <img height=\"100%\" width=\"auto\" src={mapIcon} alt=\"map\"/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './Timeline.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTruck,\r\n\tfaExclamationTriangle,\r\n\tfaFileAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nexport class Timeline extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"timeline\">\r\n        <li>\r\n          <div className=\"shipment-container\">\r\n            <p className=\"shipment-status\">Shipment Delivered</p>\r\n            <p className=\"shipment-date\">{this.getDate()}</p>\r\n            <p className=\"shipment-details\">\r\n              Shipment 35191 delivered. Serial#AS475-31001\r\n            </p>\r\n            <p className=\"shipment-carrier\">Gamma Carrier</p>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div className=\"shipment-container container-warning\">\r\n            <p className=\"shipment-status\">Shipment Delivered</p>\r\n            <p className=\"shipment-date\">{this.getDate()}</p>\r\n            <p className=\"shipment-details\">Temperature out of range.</p>\r\n            <p className=\"shipment-carrier\">Gamma Carrier</p>\r\n            <div className=\"transaction-warning\">\r\n              <h3>\r\n                38.2Â°F <FontAwesomeIcon icon={faTruck} />\r\n              </h3>\r\n              <strong>\r\n                <FontAwesomeIcon icon={faExclamationTriangle} /> Transaction\r\n                Warning\r\n              </strong>\r\n            </div>\r\n          </div>\r\n        </li>\r\n\t\t\t\t<li>\r\n          <div className=\"shipment-container\">\r\n            <p className=\"shipment-status\">Shipment Departed <FontAwesomeIcon icon={faFileAlt} className=\"status-icon\"/></p>\r\n            <p className=\"shipment-date\">{this.getDate()}</p>\r\n            <p className=\"shipment-details\">\r\n              Shipment 35191 delivered. Serial#AS475-31001\r\n            </p>\r\n            <p className=\"shipment-carrier\">Gamma Carrier</p>\r\n          </div>\r\n        </li>\r\n\t\t\t\t<li className=\"disabled\">\r\n          <div className=\"shipment-container\">\r\n            <p className=\"shipment-status\">Shipment Delivered</p>\r\n            <p className=\"shipment-date\">{this.getDate()}</p>\r\n            <p className=\"shipment-details\">\r\n              Shipment 35191 delivered. Serial#AS475-31001\r\n            </p>\r\n            <p className=\"shipment-carrier\">Gamma Carrier</p>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n  getDate() {\r\n    var options = {\r\n      weekday: 'short',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric'\r\n    };\r\n    let today = new Date();\r\n    return today.toLocaleDateString('en-US', options);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { TimeHeader } from './TimeHeader/TimeHeader';\nimport { Map } from './Map/Map';\nimport { Timeline } from './Timeline/Timeline';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <TimeHeader />\n          </div>{' '}\n        </div>{' '}\n        <div className=\"row\"> </div>{' '}\n        <div className=\"row\">\n          <div className=\"col col-sm-12, col-md-6, col-lg-6\">\n            {' '}\n            <Timeline />{' '}\n          </div>{' '}\n          <div className=\"col col-sm-12, col-md-6, col-lg-6\">\n            {' '}\n            <Map />{' '}\n          </div>{' '}\n        </div>{' '}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}